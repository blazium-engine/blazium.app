[
    {
        "name": "Blazium Services",
        "description": "Seamlessly integrate with our suite of services using dedicated nodes for each, streamlining game development with features like multiplayer, authentication, and more. Designed to be scalable, lightweight, and compatible across all platforms. <a href='/dev-tools/blazium-services'>Click here to learn more</a>.",
        "link": "blazium-sdk"
    },
    {
        "name": "Discord applications",
        "description": "Use the <code>DiscordEmbededAppClient</code> node to seamlessly interface with Discord, simplifying the creation of Activities.",
        "link": "blazium-sdk"
    },
    {
        "name": "Youtube Playables",
        "description": "With the new <code>YoutubePlayablesClient</code> node, you can easily use the YouTube Playables SDK.",
        "link": "blazium-sdk"
    },
    {
        "name": "POGR integration",
        "description": "Use the <code>POGRClient</code> node to seamlessly interface with the POGR API, making interactions more efficient and straightforward. <a href='https://pogr.gg/developer' target='_blank'>What is POGR</a>.",
        "link": "blazium-sdk"
    },
    {
        "name": "Dotenv files support",
        "description": "If you want to deploy your game and have secrets loaded into it on the server side, you can now create a .env file and have it load from next to the executable with the new <code>ENV</code> singleton.",
        "link": "blazium-sdk"
    },
    {
        "name": "Better CSV support",
        "description": "Go beyond translations and import any CSV file with expanded import options.",
        "link": "blazium-sdk"
    },
    {
        "name": "Six-Way Lighting Material",
        "description": "A Volumetric Lighting Shader using a Six-Directional Lighting Model (SDLM) designed to simulate realistic light interaction within semi-transparent volumes like cloud, smoke, fog and fire. <a href='https://github.com/blazium-engine/blazium/pull/441' target='_blank'>Read more.</a>",
        "link": "modules"
    },
    {
        "name": "SQLite database resource",
        "description": "Easily import and utilize an SQLite database with dedicated nodes, powered by <a href='https://github.com/V-Sekai/godot-vsk-sqlite' target='_blank'>V-Sekai's SQLite module</a>.",
        "link": "modules"
    },
    {
        "name": "GodotSteam integration",
        "description": "Thanks to the <a href='https://godotsteam.com' target='_blank'>GodotSteam</a> module, Blazium includes a built-in implementation of the Steamworks SDK, allowing you to use it effortlessly with no extra work.",
        "link": "modules"
    },
    {
        "name": "Taken from Godot 4.4",
        "description": "We've carefully cherry-picked several features and bug fixes from Godot 4.4 that maintain full compatibility with Godot 4.3 projects. This means you can start using Blazium right away, without any changes to your project, while benefiting from select enhancements from 4.4. Following are some of the key features.",
        "link": "godot44"
    },
    {
        "name": "Jolt physics",
        "description": "The Jolt extension has been used as the de facto physics engine by many Godot developers since its inception in late 2022, so it only made sense to integrate it into the engine directly.",
        "link": "godot44"
    },
    {
        "name": "Embedded game window",
        "description": "Have your game embeded in the editor seamlessly and interact with the rest of the editor, while still keeping the processes separate in the background.<br><b>Note:</b> this feature is not avaiable for MacOS.",
        "link": "godot44"
    },
    {
        "name": "Android editor support for XR devices",
        "description": "Because the editor itself is a project made with the engine, it can be made available in more unconventional places. Currently supported on Meta Quest 3, Quest 3S, and Quest Pro.",
        "link": "godot44"
    },
    {
        "name": "3D physics interpolation",
        "description": "By decoupling physics ticks and display frame rates, physics interpolation creates additional frames between the last physics position and the current one. This reduces jitter and creates a smoother appearance, especially on displays with a high refresh rate.",
        "link": "godot44"
    },
    {
        "name": "Universal UID support",
        "description": "All imported files will have an UID, making the editor more resistant to changes in your filesystem organization, and therefore more suitable to larger projects.",
        "link": "godot44"
    },
    {
        "name": "<code>@export_tool_button</code> annotation",
        "description": "You can create buttons in the inspector from <code>@tool</code> scripts.",
        "link": "godot44"
    },
    {
        "name": "Custom colors for collision shapes",
        "description": "Collision shapes now have <code>debug_color</code> and <code>debug_fill</code> properties for you to customize in the editor. If “Visible Collision Shapes” is enabled in the debug menu, you can even change these at runtime.",
        "link": "godot44"
    },
    {
        "name": "Vertex shading",
        "description": "A new shading option for materials, which can be turned on from within existing material nodes or force enabled on all materials via the project settings.",
        "link": "godot44"
    },
    {
        "name": "Emission shapes for 3D particle systems",
        "description": "You can rely on a visualization of the 3D particle systems you are placing in your scene, instead of having to guess based on the emission shape’s properties alone.",
        "link": "godot44"
    },
    {
        "name": "Camera3D preview",
        "description": "Enjoy a preview of its capture directly in the inspector, without having to open another viewport or switching back and forth anymore.",
        "link": "godot44"
    },
    {
        "name": "GDScript tooltips",
        "description": "Hovering over functions, variables, classes, etc. in the GDScript editor will greet you with a tooltip pop-up containing further information from the integrated documentation.",
        "link": "godot44"
    },
    {
        "name": "AgX tone mapping",
        "description": "AgX gives a movie-esque quality to renders and is capable of handling very bright scenes better than our other available options.",
        "link": "godot44"
    },
    {
        "name": "<code>LookAtModifier3D</code>",
        "description": "This new node type is used to handle 3D model procedural animation. It is specialized to make a character model look in the target direction.",
        "link": "godot44"
    },
    {
        "name": "<code>SpringBoneSimulator3D</code>",
        "description": "Bones can now have physics applied to them, enabling dynamic, real-time jiggle effects that enhance both realism and responsiveness in animations.",
        "link": "godot44"
    }
]
